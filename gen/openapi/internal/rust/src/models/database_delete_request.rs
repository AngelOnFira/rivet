/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DatabaseDeleteRequest {
    #[serde(rename = "collection")]
    pub collection: String,
    #[serde(rename = "database_id", skip_serializing_if = "Option::is_none")]
    pub database_id: Option<uuid::Uuid>,
    #[serde(rename = "filters", skip_serializing_if = "Option::is_none")]
    pub filters: Option<Vec<crate::models::DatabaseFilter>>,
}

impl DatabaseDeleteRequest {
    pub fn new(collection: String) -> DatabaseDeleteRequest {
        DatabaseDeleteRequest {
            collection,
            database_id: None,
            filters: None,
        }
    }
}


