/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PartyJoinRequest {
    #[serde(rename = "invite")]
    pub invite: Box<crate::models::PartyJoinInvite>,
    /// Whether or not to automatically join the game lobby if a party is currently in game.
    #[serde(rename = "matchmaker_auto_join_lobby", skip_serializing_if = "Option::is_none")]
    pub matchmaker_auto_join_lobby: Option<bool>,
    /// If the player is currently in the lobby, pass the token from `rivet.matchmaker#MatchmakerLobbyJoinInfoPlayer$token`. This will prevent issuing a new player token.
    #[serde(rename = "matchmaker_current_player_token", skip_serializing_if = "Option::is_none")]
    pub matchmaker_current_player_token: Option<String>,
}

impl PartyJoinRequest {
    pub fn new(invite: crate::models::PartyJoinInvite) -> PartyJoinRequest {
        PartyJoinRequest {
            invite: Box::new(invite),
            matchmaker_auto_join_lobby: None,
            matchmaker_current_player_token: None,
        }
    }
}


