/*
 * Rivet API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ChatMessageBody : Represents types of chat message bodies.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ChatMessageBody {
    #[serde(rename = "chat_create", skip_serializing_if = "Option::is_none")]
    pub chat_create: Option<serde_json::Value>,
    #[serde(rename = "deleted", skip_serializing_if = "Option::is_none")]
    pub deleted: Option<Box<crate::models::ChatMessageBodyDeleted>>,
    #[serde(rename = "group_join", skip_serializing_if = "Option::is_none")]
    pub group_join: Option<Box<crate::models::ChatMessageBodyGroupJoin>>,
    #[serde(rename = "group_leave", skip_serializing_if = "Option::is_none")]
    pub group_leave: Option<Box<crate::models::ChatMessageBodyGroupLeave>>,
    #[serde(rename = "group_member_kick", skip_serializing_if = "Option::is_none")]
    pub group_member_kick: Option<Box<crate::models::ChatMessageBodyGroupMemberKick>>,
    #[serde(rename = "identity_follow", skip_serializing_if = "Option::is_none")]
    pub identity_follow: Option<serde_json::Value>,
    #[serde(rename = "party_activity_change", skip_serializing_if = "Option::is_none")]
    pub party_activity_change: Option<Box<crate::models::ChatMessageBodyPartyActivityChange>>,
    #[serde(rename = "party_invite", skip_serializing_if = "Option::is_none")]
    pub party_invite: Option<Box<crate::models::ChatMessageBodyPartyInvite>>,
    #[serde(rename = "party_join", skip_serializing_if = "Option::is_none")]
    pub party_join: Option<Box<crate::models::ChatMessageBodyPartyJoin>>,
    #[serde(rename = "party_join_request", skip_serializing_if = "Option::is_none")]
    pub party_join_request: Option<Box<crate::models::ChatMessageBodyPartyJoinRequest>>,
    #[serde(rename = "party_leave", skip_serializing_if = "Option::is_none")]
    pub party_leave: Option<Box<crate::models::ChatMessageBodyPartyLeave>>,
    #[serde(rename = "text", skip_serializing_if = "Option::is_none")]
    pub text: Option<Box<crate::models::ChatMessageBodyText>>,
}

impl ChatMessageBody {
    /// Represents types of chat message bodies.
    pub fn new() -> ChatMessageBody {
        ChatMessageBody {
            chat_create: None,
            deleted: None,
            group_join: None,
            group_leave: None,
            group_member_kick: None,
            identity_follow: None,
            party_activity_change: None,
            party_invite: None,
            party_join: None,
            party_join_request: None,
            party_leave: None,
            text: None,
        }
    }
}


