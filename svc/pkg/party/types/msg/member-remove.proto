syntax = "proto3";

package rivet.backend.pkg.party.msg.member_remove;

import "proto/common.proto";

/// name = "msg-party-member-remove"
/// parameters = [
/// 	{ name = "party_id" },
/// 	{ name = "user_id" },
/// ]
message Message {
	rivet.common.Uuid party_id = 1;
	rivet.common.Uuid user_id = 2;

	// If the member was already updated/deleted from the database,
	bool skip_delete = 3;

	// Don't check for a new leader and destroy party if empty.
	bool skip_party_cleanup = 4;

	// Don't publish party updated messages.
	bool skip_party_updated = 5;
}

