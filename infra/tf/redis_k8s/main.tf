# TODO:
resource "kubernetes_namespace" "redis" {
	for_each = var.redis_dbs

	metadata {
		name = "redis-${each.key}"
	}
}

resource "random_password" "password" {
	for_each = var.redis_dbs

	length = 32
	special = false
}

resource "helm_release" "redis" {
	for_each = var.redis_dbs

	name = "redis"
	namespace = kubernetes_namespace.redis[each.key].metadata.0.name
	repository = "https://charts.bitnami.com/bitnami"
	chart = "redis"
	version = "18.0.2"
	values = [yamlencode({
		global = {
			storageClass = var.k8s_storage_class
			redis = {
				password = random_password.password[each.key].result
			}
		}
		replica = {
			replicaCount = 1
		}
		auth = {
			enable = true
		}
		metrics = {
			enabled = true
		}
		tls = {
			enabled = true
			authClients = false
			autoGenerated = true
		}
	})]
}

data "kubernetes_config_map" "root_ca" {
	for_each = var.redis_dbs

	depends_on = [helm_release.redis]

	metadata {
		name = "kube-root-ca.crt"
		namespace = kubernetes_namespace.redis[each.key].metadata.0.name
	}
}

resource "kubernetes_config_map" "redis_ca" {
	for_each = var.redis_dbs

	metadata {
		name = "redis-${each.key}-ca"
		namespace = "rivet-service"
		# namespace = kubernetes_namespace.rivet_service.metadata.0.name
	}

	data = data.kubernetes_config_map.root_ca[each.key].data
}

module "docker_auth" {
	source = "../modules/k8s_auth"

	namespaces = [
		for k, v in var.redis_dbs:
		kubernetes_namespace.redis[k].metadata.0.name
	]
	authenticate_all_docker_hub_pulls = var.authenticate_all_docker_hub_pulls
	deploy_method_cluster = var.deploy_method_cluster
}
