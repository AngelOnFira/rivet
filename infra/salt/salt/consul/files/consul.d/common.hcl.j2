{% set nebula_ipv4 = grains['nebula']['ipv4'] %}
{% set public_ipv4 = salt['network.ip_addrs'](type='public')[0] %}
{% set public_ipv6 = salt['network.ip_addrs6']()[0] %}
{% set private_ipv4 = salt['network.ip_addrs'](type='private')[0] %}

# Name will be set to the hostname
#
# On selecting private addresses: see https://pkg.go.dev/github.com/hashicorp/go-sockaddr?utm_source=godoc#GetPrivateIPs
# On selecting public addresses: https://pkg.go.dev/github.com/hashicorp/go-sockaddr?utm_source=godoc#GetPrivateIPs
#
# See https://github.com/hashicorp/c2m/blob/master/terraform/c1m-control-plane/templates/consul.hcl

datacenter = "{{ grains['rivet']['region_id'] }}"
data_dir = "/opt/consul/data"
node_name = "{{ grains['rivet']['name'] }}"

bind_addr = "{{ nebula_ipv4 }}"
translate_wan_addrs = true

addresses {
	dns = "127.0.0.1"
	http = "{{ nebula_ipv4 }} 127.0.0.1"
	grpc = "{{ nebula_ipv4 }} 127.0.0.1"
}

ports {
	# Required to enable Consul Connect
	grpc = 8502
}

{%- if grains['rivet']['region_id'] == pillar['rivet']['primary_region'] %}
# Join over LAN
# TODO: Split LAN and WAN joining
retry_join = [
	{%- for server, addr in salt['mine.get']('roles:consul-server', 'nebula_ipv4', tgt_type='grain', exclude_minion=True) | dictsort() %}
	"{{ addr }}",  # {{ server }}
	{%- endfor %}
]
{%- endif %}
retry_interval = "60s"
retry_max = 0

node_meta = {
	"pool-id" = "{{ grains['rivet']['pool_id'] }}"
	"network-public-ipv4" = "{{ public_ipv4 }}"
	"network-public-ipv6" = "{{ public_ipv6 }}"
	"network-private-ipv4" = "{{ private_ipv4 }}"
	"network-private-ipv6" = ""
}

connect {
	enabled = true
}

telemetry {
	prometheus_retention_time = "30m"
}

# Needed for Prometheus rate limiting and consul-template
limits {
	http_max_conns_per_client = 4096
	rpc_max_conns_per_client = 4096
}

