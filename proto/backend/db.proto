syntax = "proto3";

package rivet.backend.db;

import "proto/common.proto";
import "google/protobuf/empty.proto";

// MARK: Game Namespace Config
message GameNamespaceConfig {
}

// MARK: Game Version Config
message GameVersionConfig {	
	/*
	message Database {
		string key = 1;
		rivet.common.Uuid database_id = 2;
	}

	repeated Database databases = 1;
	*/
}

// MARK: Game Version Config Context
message GameVersionConfigCtx {

}

// MARK: Game Version Config Meta
message GameVersionConfigMeta {
	
}

// Database
message Database {
	rivet.common.Uuid database_id = 1;
	rivet.common.Uuid owner_team_id = 2;
	string name_id = 3;
	Schema schema = 4;
}

message Schema {
	repeated Collection collections = 1;
}

message Collection {
	string name_id = 1;
	repeated Field fields = 2;
}

message Field {
	enum Type {
		INT = 0;
		FLOAT = 1;
		BOOL = 2;
		STRING = 3;
	}

	string name_id = 1;
	Type type = 2;
	bool optional = 3;
}

// Query
message Query {
	message Fetch {
		string collection = 1;
		repeated Filter filters = 2;
	}

	message Insert {
		string collection = 1;
		map<string, Value> entry = 2;
	}

	message Update {
		string collection = 1;
		repeated Filter filters = 2;
		map<string, Value> set = 3;
	}

	message Delete {
		string collection = 1;
		repeated Filter filters = 2;
	}

	oneof kind {
		Fetch fetch = 101;
		Insert insert = 102;
		Update update = 103;
		Delete delete = 104;
	}
}

message Value {
	oneof type {
		google.protobuf.Empty null = 1;
		int64 int = 2;
		double float = 3;
		bool bool = 4;
		string string = 5;
	}
}

message Filter {
	string field = 1;

	oneof kind {
		Value equal = 101;
	}
}

