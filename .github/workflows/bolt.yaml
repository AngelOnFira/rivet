name: bolt

on: [push]

concurrency:
  group: check-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    # Enable fail-fast behavior
    shell: bash -e {0}

env:
  store: /home/runner/nix

jobs:
  check:
    runs-on: buildjet-8vcpu-ubuntu-2204
    # runs-on: ubuntu-22.04

    steps:
      # MARK: Git
      - name: Checkout
        uses: actions/checkout@v3.5.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive

      # MARK: Nix
      # - uses: cachix/install-nix-action@v22
      #   with:
      #     nix_path: nixpkgs=channel:nixos-23.05
      #     # TODO: Add back
      #     # extra_nix_config: "store = ${{ env.store }}\n"

      # - name: Nix Cache
      #   uses: buildjet/cache@v3.3.1
      #   with:
      #     key: ${{ runner.os }}-nix-${{ hashfiles('./shell.nix', './nix/**/*.nix') }}
      #     path: ${{ env.store }}
      #     restore-keys: |
      #       ${{ runner.os }}-nix-${{ hashfiles('./shell.nix', './nix/**/*.nix') }}
      #       ${{ runner.os }}-nix-

      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build Shell
        run: nix-shell --pure --run "echo 'Built shell'"

      # MARK: Rust
      - name: Rust Cache
        uses: buildjet/cache@v3.3.1
        with:
          key: ${{ runner.os }}-rust
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target

      # MARK: Bolt
      - name: Bolt Cache
        uses: buildjet/cache@v3.3.1
        with:
          key: ${{ runner.os }}-cargo
          path: |
            .bolt-meta.json
            gen/

      - name: Write Namespace Config
        run: |
          # Write secrets so they're not prompted in `bolt init`
          cat <<'EOF' > secrets/ci.toml
          [sendgrid]
          key = "TODO"
          EOF

      - name: Setup
        run: nix-shell --pure --run "SKIP_GIT_LFS=1 NPM_GLOBAL=1 ./scripts/setup.sh"

      # - name: Bolt Generate
      #   run: nix-shell --pure --run "./target/debug/bolt init ci"

      # TODO: Run check in parallel
      # - name: Bolt Check
      #   run: nix-shell --pure --run "./target/debug/bolt check --validate-format"

      # TODO: Make this run only whe migrations change
      # TODO: Broken for some reason
      # - name: Bolt Database Migrate Check
      #   run: nix-shell --pure --run "BOLT_NAMESPACE=ci BOLT_IGNORE_TERRAFORM=1 bolt database migrate check"
